//Trouver tous les medalist : (ne marche pas si le lien est asymetrique)

select distinct ?athlete where{ 
{?athlete rdf:type yago:Medalist110305062.}
 UNION
{?event dbo:bronzeMedalist ?athlete.}
UNION
{?event dbo:silverMedalist ?athlete.}
UNION
{?event dbo:goldMedalist ?athlete.}
}

//trouver les noms de tous les medalists

select distinct ?name where{ 
{?athlete rdf:type yago:Medalist110305062.
?athlete dbp:birthName ?name.}
 UNION
{?event dbo:bronzeMedalist ?athlete.
?athlete dbp:birthName ?name.}
UNION
{?event dbo:silverMedalist ?athlete.
?athlete dbp:birthName ?name.}
UNION
{?event dbo:goldMedalist ?athlete.
?athlete dbp:birthName ?name.}
}

//Renvoie le tableau des medailles avec leur sport
select distinct ?athlete ?label where{ 
{?athlete rdf:type yago:Medalist110305062.
?athlete dbp:sport ?sport.
?sport rdfs:label ?label.
FILTER langMatches(lang(?label),'en')}
 UNION
{?event dbo:bronzeMedalist ?athlete.
?athlete dbp:sport ?sport.
?sport rdfs:label ?label.
FILTER langMatches(lang(?label),'en')}
UNION
{?event dbo:silverMedalist ?athlete.
?athlete dbp:sport ?sport.
?sport rdfs:label ?label.
FILTER langMatches(lang(?label),'en')}
UNION
{?event dbo:goldMedalist ?athlete.
?athlete dbp:sport ?sport.
?sport rdfs:label ?label.
FILTER langMatches(lang(?label),'en')}
}


//renvoie les athlete et leur abstract (seulement pour les abstracts en anglais)
select distinct ?athlete ?abstract where
{ 
{?athlete rdf:type yago:Medalist110305062. ?athlete dbo:abstract ?abstract. FILTER langMatches(lang(?abstract),'en')}
UNION
{?athlete rdf:type dbo:bronzeMedalist. ?athlete dbo:abstract ?abstract. FILTER langMatches(lang(?abstract),'en')}
UNION
{?athlete rdf:type dbo:silverMedalist. ?athlete dbo:abstract ?abstract. FILTER langMatches(lang(?abstract),'en')}
UNION
{?athlete rdf:type dbo:goldMedalist. ?athlete dbo:abstract ?abstract. FILTER langMatches(lang(?abstract),'en')}}
